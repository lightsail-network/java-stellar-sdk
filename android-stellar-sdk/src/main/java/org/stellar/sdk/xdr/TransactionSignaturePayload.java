// Automatically generated by xdrgen 
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

// === xdr source ============================================================

//  struct TransactionSignaturePayload {
//      Hash networkId;
//      union switch (EnvelopeType type)
//      {
//      case ENVELOPE_TYPE_TX:
//            Transaction tx;
//      /* All other values of type are invalid */
//      } taggedTransaction;
//  };

//  ===========================================================================
public class TransactionSignaturePayload  {
  public TransactionSignaturePayload () {}
  private Hash networkId;
  public Hash getNetworkId() {
    return this.networkId;
  }
  public void setNetworkId(Hash value) {
    this.networkId = value;
  }
  private TransactionSignaturePayloadTaggedTransaction taggedTransaction;
  public TransactionSignaturePayloadTaggedTransaction getTaggedTransaction() {
    return this.taggedTransaction;
  }
  public void setTaggedTransaction(TransactionSignaturePayloadTaggedTransaction value) {
    this.taggedTransaction = value;
  }
  public static void encode(XdrDataOutputStream stream, TransactionSignaturePayload encodedTransactionSignaturePayload) throws IOException{
    Hash.encode(stream, encodedTransactionSignaturePayload.networkId);
    TransactionSignaturePayloadTaggedTransaction.encode(stream, encodedTransactionSignaturePayload.taggedTransaction);
  }
  public static TransactionSignaturePayload decode(XdrDataInputStream stream) throws IOException {
    TransactionSignaturePayload decodedTransactionSignaturePayload = new TransactionSignaturePayload();
    decodedTransactionSignaturePayload.networkId = Hash.decode(stream);
    decodedTransactionSignaturePayload.taggedTransaction = TransactionSignaturePayloadTaggedTransaction.decode(stream);
    return decodedTransactionSignaturePayload;
  }

  public static class TransactionSignaturePayloadTaggedTransaction {
    public TransactionSignaturePayloadTaggedTransaction () {}
    EnvelopeType type;
    public EnvelopeType getDiscriminant() {
      return this.type;
    }
    public void setDiscriminant(EnvelopeType value) {
      this.type = value;
    }
    private Transaction tx;
    public Transaction getTx() {
      return this.tx;
    }
    public void setTx(Transaction value) {
      this.tx = value;
    }
    public static void encode(XdrDataOutputStream stream, TransactionSignaturePayloadTaggedTransaction encodedTransactionSignaturePayloadTaggedTransaction) throws IOException {
    stream.writeInt(encodedTransactionSignaturePayloadTaggedTransaction.getDiscriminant().getValue());
    switch (encodedTransactionSignaturePayloadTaggedTransaction.getDiscriminant()) {
    case ENVELOPE_TYPE_TX:
    Transaction.encode(stream, encodedTransactionSignaturePayloadTaggedTransaction.tx);
    break;
    }
    }
    public static TransactionSignaturePayloadTaggedTransaction decode(XdrDataInputStream stream) throws IOException {
    TransactionSignaturePayloadTaggedTransaction decodedTransactionSignaturePayloadTaggedTransaction = new TransactionSignaturePayloadTaggedTransaction();
    EnvelopeType discriminant = EnvelopeType.decode(stream);
    decodedTransactionSignaturePayloadTaggedTransaction.setDiscriminant(discriminant);
    switch (decodedTransactionSignaturePayloadTaggedTransaction.getDiscriminant()) {
    case ENVELOPE_TYPE_TX:
    decodedTransactionSignaturePayloadTaggedTransaction.tx = Transaction.decode(stream);
    break;
    }
      return decodedTransactionSignaturePayloadTaggedTransaction;
    }

  }
}
