package org.stellar.sdk.operations;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.junit.Assert;
import org.junit.Test;

public class ClaimClaimableBalanceOperationTest {
  @Test
  public void testBuilder() {
    String balanceId = "000000006d6a0c142516a9cc7885a85c5aba3a1f4af5181cf9e7a809ac7ae5e4a58c825f";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";
    ClaimClaimableBalanceOperation operation =
        ClaimClaimableBalanceOperation.builder()
            .balanceId(balanceId)
            .sourceAccount(accountId)
            .build();
    assertEquals(accountId, operation.getSourceAccount());
    assertEquals(balanceId, operation.getBalanceId());
    // Generated by js-stellar-base.
    assertEquals(
        "AAAAAQAAAAADOcvN4KfwUbxY/oKijIj6+TBW9Ca0QaQuRkR7MK0FBgAAAA8AAAAAbWoMFCUWqcx4hahcWro6H0r1GBz556gJrHrl5KWMgl8=",
        operation.toXdrBase64());
  }

  @Test
  public void testBuilder_UpperBalanceId() {
    String balanceId = "000000006d6a0c142516a9cc7885a85c5aba3a1f4af5181cf9e7a809ac7ae5e4a58c825f";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";
    ClaimClaimableBalanceOperation operation =
        ClaimClaimableBalanceOperation.builder()
            .balanceId(balanceId.toUpperCase())
            .sourceAccount(accountId)
            .build();
    assertEquals(accountId, operation.getSourceAccount());
    assertEquals(balanceId, operation.getBalanceId());
    // Generated by js-stellar-base.
    assertEquals(
        "AAAAAQAAAAADOcvN4KfwUbxY/oKijIj6+TBW9Ca0QaQuRkR7MK0FBgAAAA8AAAAAbWoMFCUWqcx4hahcWro6H0r1GBz556gJrHrl5KWMgl8=",
        operation.toXdrBase64());
  }

  @Test
  public void testFromXdr() {
    String balanceId = "000000006d6a0c142516a9cc7885a85c5aba3a1f4af5181cf9e7a809ac7ae5e4a58c825f";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";
    ClaimClaimableBalanceOperation op =
        ClaimClaimableBalanceOperation.builder()
            .balanceId(balanceId)
            .sourceAccount(accountId)
            .build();
    org.stellar.sdk.xdr.Operation xdrObject = op.toXdr();
    ClaimClaimableBalanceOperation restoreOp =
        (ClaimClaimableBalanceOperation) Operation.fromXdr(xdrObject);
    Assert.assertEquals(restoreOp, op);
  }

  @Test
  public void testBuilderWithInvalidEmptyBalanceId() {
    String balanceId = "";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";

    try {
      ClaimClaimableBalanceOperation operation =
          ClaimClaimableBalanceOperation.builder()
              .balanceId(balanceId)
              .sourceAccount(accountId)
              .build();
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("invalid balanceId: ", e.getMessage());
    }
  }

  @Test
  public void testBuilderWithInvalidClaimableBalanceIDTypeMissing() {
    String balanceId = "6d6a0c142516a9cc7885a85c5aba3a1f4af5181cf9e7a809ac7ae5e4a58c825f";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";

    try {
      ClaimClaimableBalanceOperation operation =
          ClaimClaimableBalanceOperation.builder()
              .balanceId(balanceId)
              .sourceAccount(accountId)
              .build();
      fail();
    } catch (RuntimeException ignored) {
    }
  }

  @Test
  public void testBuilderWithInvalidClaimableBalanceIDBodyMissing() {
    String balanceId = "00000000";
    String accountId = "GABTTS6N4CT7AUN4LD7IFIUMRD5PSMCW6QTLIQNEFZDEI6ZQVUCQMCLN";
    try {
      ClaimClaimableBalanceOperation operation =
          ClaimClaimableBalanceOperation.builder()
              .balanceId(balanceId)
              .sourceAccount(accountId)
              .build();
      fail();
    } catch (IllegalArgumentException e) {
      assertEquals("invalid balanceId: " + balanceId, e.getMessage());
    }
  }
}
