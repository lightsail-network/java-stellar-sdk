// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import static org.stellar.sdk.xdr.Constants.*;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  struct Auth
//  {
//      int flags;
//  };

//  ===========================================================================
public class Auth implements XdrElement {
  public Auth() {}

  private Integer flags;

  public Integer getFlags() {
    return this.flags;
  }

  public void setFlags(Integer value) {
    this.flags = value;
  }

  public static void encode(XdrDataOutputStream stream, Auth encodedAuth) throws IOException {
    stream.writeInt(encodedAuth.flags);
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public static Auth decode(XdrDataInputStream stream) throws IOException {
    Auth decodedAuth = new Auth();
    decodedAuth.flags = stream.readInt();
    return decodedAuth;
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.flags);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof Auth)) {
      return false;
    }

    Auth other = (Auth) object;
    return Objects.equal(this.flags, other.flags);
  }

  public static final class Builder {
    private Integer flags;

    public Builder flags(Integer flags) {
      this.flags = flags;
      return this;
    }

    public Auth build() {
      Auth val = new Auth();
      val.setFlags(this.flags);
      return val;
    }
  }
}
