// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import static org.stellar.sdk.xdr.Constants.*;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  struct ConfigSettingContractBandwidthV0
//  {
//      // Maximum size in bytes to propagate per ledger
//      uint32 ledgerMaxPropagateSizeBytes;
//      // Maximum size in bytes for a transaction
//      uint32 txMaxSizeBytes;
//
//      // Fee for propagating 1KB of data
//      int64 feePropagateData1KB;
//  };

//  ===========================================================================
public class ConfigSettingContractBandwidthV0 implements XdrElement {
  public ConfigSettingContractBandwidthV0() {}

  private Uint32 ledgerMaxPropagateSizeBytes;

  public Uint32 getLedgerMaxPropagateSizeBytes() {
    return this.ledgerMaxPropagateSizeBytes;
  }

  public void setLedgerMaxPropagateSizeBytes(Uint32 value) {
    this.ledgerMaxPropagateSizeBytes = value;
  }

  private Uint32 txMaxSizeBytes;

  public Uint32 getTxMaxSizeBytes() {
    return this.txMaxSizeBytes;
  }

  public void setTxMaxSizeBytes(Uint32 value) {
    this.txMaxSizeBytes = value;
  }

  private Int64 feePropagateData1KB;

  public Int64 getFeePropagateData1KB() {
    return this.feePropagateData1KB;
  }

  public void setFeePropagateData1KB(Int64 value) {
    this.feePropagateData1KB = value;
  }

  public static void encode(
      XdrDataOutputStream stream,
      ConfigSettingContractBandwidthV0 encodedConfigSettingContractBandwidthV0)
      throws IOException {
    Uint32.encode(stream, encodedConfigSettingContractBandwidthV0.ledgerMaxPropagateSizeBytes);
    Uint32.encode(stream, encodedConfigSettingContractBandwidthV0.txMaxSizeBytes);
    Int64.encode(stream, encodedConfigSettingContractBandwidthV0.feePropagateData1KB);
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public static ConfigSettingContractBandwidthV0 decode(XdrDataInputStream stream)
      throws IOException {
    ConfigSettingContractBandwidthV0 decodedConfigSettingContractBandwidthV0 =
        new ConfigSettingContractBandwidthV0();
    decodedConfigSettingContractBandwidthV0.ledgerMaxPropagateSizeBytes = Uint32.decode(stream);
    decodedConfigSettingContractBandwidthV0.txMaxSizeBytes = Uint32.decode(stream);
    decodedConfigSettingContractBandwidthV0.feePropagateData1KB = Int64.decode(stream);
    return decodedConfigSettingContractBandwidthV0;
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(
        this.ledgerMaxPropagateSizeBytes, this.txMaxSizeBytes, this.feePropagateData1KB);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof ConfigSettingContractBandwidthV0)) {
      return false;
    }

    ConfigSettingContractBandwidthV0 other = (ConfigSettingContractBandwidthV0) object;
    return Objects.equal(this.ledgerMaxPropagateSizeBytes, other.ledgerMaxPropagateSizeBytes)
        && Objects.equal(this.txMaxSizeBytes, other.txMaxSizeBytes)
        && Objects.equal(this.feePropagateData1KB, other.feePropagateData1KB);
  }

  public static final class Builder {
    private Uint32 ledgerMaxPropagateSizeBytes;
    private Uint32 txMaxSizeBytes;
    private Int64 feePropagateData1KB;

    public Builder ledgerMaxPropagateSizeBytes(Uint32 ledgerMaxPropagateSizeBytes) {
      this.ledgerMaxPropagateSizeBytes = ledgerMaxPropagateSizeBytes;
      return this;
    }

    public Builder txMaxSizeBytes(Uint32 txMaxSizeBytes) {
      this.txMaxSizeBytes = txMaxSizeBytes;
      return this;
    }

    public Builder feePropagateData1KB(Int64 feePropagateData1KB) {
      this.feePropagateData1KB = feePropagateData1KB;
      return this;
    }

    public ConfigSettingContractBandwidthV0 build() {
      ConfigSettingContractBandwidthV0 val = new ConfigSettingContractBandwidthV0();
      val.setLedgerMaxPropagateSizeBytes(this.ledgerMaxPropagateSizeBytes);
      val.setTxMaxSizeBytes(this.txMaxSizeBytes);
      val.setFeePropagateData1KB(this.feePropagateData1KB);
      return val;
    }
  }
}
