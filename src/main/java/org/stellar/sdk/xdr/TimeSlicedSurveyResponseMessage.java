// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * TimeSlicedSurveyResponseMessage's original definition in the XDR file is:
 *
 * <pre>
 * struct TimeSlicedSurveyResponseMessage
 * {
 *     SurveyResponseMessage response;
 *     uint32 nonce;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class TimeSlicedSurveyResponseMessage implements XdrElement {
  private SurveyResponseMessage response;
  private Uint32 nonce;

  public void encode(XdrDataOutputStream stream) throws IOException {
    response.encode(stream);
    nonce.encode(stream);
  }

  public static TimeSlicedSurveyResponseMessage decode(XdrDataInputStream stream)
      throws IOException {
    TimeSlicedSurveyResponseMessage decodedTimeSlicedSurveyResponseMessage =
        new TimeSlicedSurveyResponseMessage();
    decodedTimeSlicedSurveyResponseMessage.response = SurveyResponseMessage.decode(stream);
    decodedTimeSlicedSurveyResponseMessage.nonce = Uint32.decode(stream);
    return decodedTimeSlicedSurveyResponseMessage;
  }

  public static TimeSlicedSurveyResponseMessage fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static TimeSlicedSurveyResponseMessage fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
