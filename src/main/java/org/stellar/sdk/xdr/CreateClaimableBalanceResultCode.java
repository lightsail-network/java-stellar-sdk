// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.stellar.sdk.Base64Factory;

/**
 * CreateClaimableBalanceResultCode's original definition in the XDR file is:
 *
 * <pre>
 * enum CreateClaimableBalanceResultCode
 * {
 *     CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,
 *     CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,
 *     CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,
 *     CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,
 *     CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,
 *     CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5
 * };
 * </pre>
 */
public enum CreateClaimableBalanceResultCode implements XdrElement {
  CREATE_CLAIMABLE_BALANCE_SUCCESS(0),
  CREATE_CLAIMABLE_BALANCE_MALFORMED(-1),
  CREATE_CLAIMABLE_BALANCE_LOW_RESERVE(-2),
  CREATE_CLAIMABLE_BALANCE_NO_TRUST(-3),
  CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED(-4),
  CREATE_CLAIMABLE_BALANCE_UNDERFUNDED(-5);

  private final int value;

  CreateClaimableBalanceResultCode(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static CreateClaimableBalanceResultCode decode(XdrDataInputStream stream)
      throws IOException {
    int value = stream.readInt();
    switch (value) {
      case 0:
        return CREATE_CLAIMABLE_BALANCE_SUCCESS;
      case -1:
        return CREATE_CLAIMABLE_BALANCE_MALFORMED;
      case -2:
        return CREATE_CLAIMABLE_BALANCE_LOW_RESERVE;
      case -3:
        return CREATE_CLAIMABLE_BALANCE_NO_TRUST;
      case -4:
        return CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED;
      case -5:
        return CREATE_CLAIMABLE_BALANCE_UNDERFUNDED;
      default:
        throw new IllegalArgumentException("Unknown enum value: " + value);
    }
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(value);
  }

  public static CreateClaimableBalanceResultCode fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static CreateClaimableBalanceResultCode fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
