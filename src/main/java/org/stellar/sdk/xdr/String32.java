// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * String32's original definition in the XDR file is:
 *
 * <pre>
 * typedef string string32&lt;32&gt;;
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class String32 implements XdrElement {
  private XdrString string32;

  public void encode(XdrDataOutputStream stream) throws IOException {
    string32.encode(stream);
  }

  public static String32 decode(XdrDataInputStream stream) throws IOException {
    String32 decodedString32 = new String32();
    decodedString32.string32 = XdrString.decode(stream, 32);
    return decodedString32;
  }

  public static String32 fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static String32 fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
