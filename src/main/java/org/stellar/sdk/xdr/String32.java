// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

import java.util.Arrays;

// === xdr source ============================================================

//  typedef string string32<32>;

//  ===========================================================================
public class String32 implements XdrElement {
  private byte[] string32;
  public byte[] getString32() {
    return this.string32;
  }
  public void setString32(byte[] value) {
    this.string32 = value;
  }
  public static void encode(XdrDataOutputStream stream, String32  encodedString32) throws IOException {
  int string32size = encodedString32.string32.length;
  stream.writeInt(string32size);
  stream.write(encodedString32.getString32(), 0, string32size);
  }
  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }
  public static String32 decode(XdrDataInputStream stream) throws IOException {
    String32 decodedString32 = new String32();
  int string32size = stream.readInt();
  decodedString32.string32 = new byte[string32size];
  stream.read(decodedString32.string32, 0, string32size);
    return decodedString32;
  }
  @Override
  public int hashCode() {
    return Arrays.hashCode(this.string32);
  }
  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof String32)) {
      return false;
    }

    String32 other = (String32) object;
    return Arrays.equals(this.string32, other.string32);
  }
}
