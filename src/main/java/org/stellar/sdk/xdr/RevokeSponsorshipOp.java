// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * RevokeSponsorshipOp's original definition in the XDR file is:
 *
 * <pre>
 * union RevokeSponsorshipOp switch (RevokeSponsorshipType type)
 * {
 * case REVOKE_SPONSORSHIP_LEDGER_ENTRY:
 *     LedgerKey ledgerKey;
 * case REVOKE_SPONSORSHIP_SIGNER:
 *     struct
 *     {
 *         AccountID accountID;
 *         SignerKey signerKey;
 *     } signer;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class RevokeSponsorshipOp implements XdrElement {
  private RevokeSponsorshipType discriminant;
  private LedgerKey ledgerKey;
  private RevokeSponsorshipOpSigner signer;

  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(discriminant.getValue());
    switch (discriminant) {
      case REVOKE_SPONSORSHIP_LEDGER_ENTRY:
        ledgerKey.encode(stream);
        break;
      case REVOKE_SPONSORSHIP_SIGNER:
        signer.encode(stream);
        break;
    }
  }

  public static RevokeSponsorshipOp decode(XdrDataInputStream stream) throws IOException {
    RevokeSponsorshipOp decodedRevokeSponsorshipOp = new RevokeSponsorshipOp();
    RevokeSponsorshipType discriminant = RevokeSponsorshipType.decode(stream);
    decodedRevokeSponsorshipOp.setDiscriminant(discriminant);
    switch (decodedRevokeSponsorshipOp.getDiscriminant()) {
      case REVOKE_SPONSORSHIP_LEDGER_ENTRY:
        decodedRevokeSponsorshipOp.ledgerKey = LedgerKey.decode(stream);
        break;
      case REVOKE_SPONSORSHIP_SIGNER:
        decodedRevokeSponsorshipOp.signer = RevokeSponsorshipOpSigner.decode(stream);
        break;
    }
    return decodedRevokeSponsorshipOp;
  }

  public static RevokeSponsorshipOp fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static RevokeSponsorshipOp fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }

  /**
   * RevokeSponsorshipOpSigner's original definition in the XDR file is:
   *
   * <pre>
   * struct
   *     {
   *         AccountID accountID;
   *         SignerKey signerKey;
   *     }
   * </pre>
   */
  @Data
  @NoArgsConstructor
  @AllArgsConstructor
  @Builder(toBuilder = true)
  public static class RevokeSponsorshipOpSigner implements XdrElement {
    private AccountID accountID;
    private SignerKey signerKey;

    public void encode(XdrDataOutputStream stream) throws IOException {
      accountID.encode(stream);
      signerKey.encode(stream);
    }

    public static RevokeSponsorshipOpSigner decode(XdrDataInputStream stream) throws IOException {
      RevokeSponsorshipOpSigner decodedRevokeSponsorshipOpSigner = new RevokeSponsorshipOpSigner();
      decodedRevokeSponsorshipOpSigner.accountID = AccountID.decode(stream);
      decodedRevokeSponsorshipOpSigner.signerKey = SignerKey.decode(stream);
      return decodedRevokeSponsorshipOpSigner;
    }

    public static RevokeSponsorshipOpSigner fromXdrBase64(String xdr) throws IOException {
      byte[] bytes = Base64Factory.getInstance().decode(xdr);
      return fromXdrByteArray(bytes);
    }

    public static RevokeSponsorshipOpSigner fromXdrByteArray(byte[] xdr) throws IOException {
      ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
      XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
      return decode(xdrDataInputStream);
    }
  }
}
