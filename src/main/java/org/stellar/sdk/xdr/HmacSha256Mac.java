// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

import java.util.Arrays;

// === xdr source ============================================================

//  struct HmacSha256Mac
//  {
//          opaque mac[32];
//  };

//  ===========================================================================
public class HmacSha256Mac  {
  public HmacSha256Mac () {}
  private byte[] mac;
  public byte[] getMac() {
    return this.mac;
  }
  public void setMac(byte[] value) {
    this.mac = value;
  }
  public static void encode(XdrDataOutputStream stream, HmacSha256Mac encodedHmacSha256Mac) throws IOException{
    int macsize = encodedHmacSha256Mac.mac.length;
    stream.write(encodedHmacSha256Mac.getMac(), 0, macsize);
  }
  public static HmacSha256Mac decode(XdrDataInputStream stream) throws IOException {
    HmacSha256Mac decodedHmacSha256Mac = new HmacSha256Mac();
    int macsize = 32;
    decodedHmacSha256Mac.mac = new byte[macsize];
    stream.read(decodedHmacSha256Mac.mac, 0, macsize);
    return decodedHmacSha256Mac;
  }
  @Override
  public int hashCode() {
    return Arrays.hashCode(this.mac);
  }
  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof HmacSha256Mac)) {
      return false;
    }

    HmacSha256Mac other = (HmacSha256Mac) object;
    return Arrays.equals(this.mac, other.mac);
  }
}
