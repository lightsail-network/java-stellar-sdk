// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * SignatureHint's original definition in the XDR file is:
 *
 * <pre>
 * typedef opaque SignatureHint[4];
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class SignatureHint implements XdrElement {
  private byte[] SignatureHint;

  public void encode(XdrDataOutputStream stream) throws IOException {
    int SignatureHintSize = SignatureHint.length;
    stream.write(getSignatureHint(), 0, SignatureHintSize);
  }

  public static SignatureHint decode(XdrDataInputStream stream) throws IOException {
    SignatureHint decodedSignatureHint = new SignatureHint();
    int SignatureHintSize = 4;
    decodedSignatureHint.SignatureHint = new byte[SignatureHintSize];
    stream.read(decodedSignatureHint.SignatureHint, 0, SignatureHintSize);
    return decodedSignatureHint;
  }

  public static SignatureHint fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static SignatureHint fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
