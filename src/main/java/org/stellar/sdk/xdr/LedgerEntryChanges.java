// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

import java.util.Arrays;

// === xdr source ============================================================

//  typedef LedgerEntryChange LedgerEntryChanges<>;

//  ===========================================================================
public class LedgerEntryChanges  {
  private LedgerEntryChange[] LedgerEntryChanges;
  public LedgerEntryChange[] getLedgerEntryChanges() {
    return this.LedgerEntryChanges;
  }
  public void setLedgerEntryChanges(LedgerEntryChange[] value) {
    this.LedgerEntryChanges = value;
  }
  public static void encode(XdrDataOutputStream stream, LedgerEntryChanges  encodedLedgerEntryChanges) throws IOException {
  int LedgerEntryChangessize = encodedLedgerEntryChanges.getLedgerEntryChanges().length;
  stream.writeInt(LedgerEntryChangessize);
  for (int i = 0; i < LedgerEntryChangessize; i++) {
    LedgerEntryChange.encode(stream, encodedLedgerEntryChanges.LedgerEntryChanges[i]);
  }
  }
  public static LedgerEntryChanges decode(XdrDataInputStream stream) throws IOException {
    LedgerEntryChanges decodedLedgerEntryChanges = new LedgerEntryChanges();
  int LedgerEntryChangessize = stream.readInt();
  decodedLedgerEntryChanges.LedgerEntryChanges = new LedgerEntryChange[LedgerEntryChangessize];
  for (int i = 0; i < LedgerEntryChangessize; i++) {
    decodedLedgerEntryChanges.LedgerEntryChanges[i] = LedgerEntryChange.decode(stream);
  }
    return decodedLedgerEntryChanges;
  }
  @Override
  public int hashCode() {
    return Arrays.hashCode(this.LedgerEntryChanges);
  }
  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof LedgerEntryChanges)) {
      return false;
    }

    LedgerEntryChanges other = (LedgerEntryChanges) object;
    return Arrays.equals(this.LedgerEntryChanges, other.LedgerEntryChanges);
  }
}
