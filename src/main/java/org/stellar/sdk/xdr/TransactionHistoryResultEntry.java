// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * TransactionHistoryResultEntry's original definition in the XDR file is:
 *
 * <pre>
 * struct TransactionHistoryResultEntry
 * {
 *     uint32 ledgerSeq;
 *     TransactionResultSet txResultSet;
 *
 *     // reserved for future use
 *     union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     }
 *     ext;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class TransactionHistoryResultEntry implements XdrElement {
  private Uint32 ledgerSeq;
  private TransactionResultSet txResultSet;
  private TransactionHistoryResultEntryExt ext;

  public void encode(XdrDataOutputStream stream) throws IOException {
    ledgerSeq.encode(stream);
    txResultSet.encode(stream);
    ext.encode(stream);
  }

  public static TransactionHistoryResultEntry decode(XdrDataInputStream stream) throws IOException {
    TransactionHistoryResultEntry decodedTransactionHistoryResultEntry =
        new TransactionHistoryResultEntry();
    decodedTransactionHistoryResultEntry.ledgerSeq = Uint32.decode(stream);
    decodedTransactionHistoryResultEntry.txResultSet = TransactionResultSet.decode(stream);
    decodedTransactionHistoryResultEntry.ext = TransactionHistoryResultEntryExt.decode(stream);
    return decodedTransactionHistoryResultEntry;
  }

  public static TransactionHistoryResultEntry fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static TransactionHistoryResultEntry fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }

  /**
   * TransactionHistoryResultEntryExt's original definition in the XDR file is:
   *
   * <pre>
   * union switch (int v)
   *     {
   *     case 0:
   *         void;
   *     }
   * </pre>
   */
  @Data
  @NoArgsConstructor
  @AllArgsConstructor
  @Builder(toBuilder = true)
  public static class TransactionHistoryResultEntryExt implements XdrElement {
    private Integer discriminant;

    public void encode(XdrDataOutputStream stream) throws IOException {
      stream.writeInt(discriminant);
      switch (discriminant) {
        case 0:
          break;
      }
    }

    public static TransactionHistoryResultEntryExt decode(XdrDataInputStream stream)
        throws IOException {
      TransactionHistoryResultEntryExt decodedTransactionHistoryResultEntryExt =
          new TransactionHistoryResultEntryExt();
      Integer discriminant = stream.readInt();
      decodedTransactionHistoryResultEntryExt.setDiscriminant(discriminant);
      switch (decodedTransactionHistoryResultEntryExt.getDiscriminant()) {
        case 0:
          break;
      }
      return decodedTransactionHistoryResultEntryExt;
    }

    public static TransactionHistoryResultEntryExt fromXdrBase64(String xdr) throws IOException {
      byte[] bytes = Base64Factory.getInstance().decode(xdr);
      return fromXdrByteArray(bytes);
    }

    public static TransactionHistoryResultEntryExt fromXdrByteArray(byte[] xdr) throws IOException {
      ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
      XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
      return decode(xdrDataInputStream);
    }
  }
}
