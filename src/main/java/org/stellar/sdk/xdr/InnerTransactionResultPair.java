// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import static org.stellar.sdk.xdr.Constants.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * InnerTransactionResultPair's original definition in the XDR file is:
 *
 * <pre>
 * struct InnerTransactionResultPair
 * {
 *     Hash transactionHash;          // hash of the inner transaction
 *     InnerTransactionResult result; // result for the inner transaction
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class InnerTransactionResultPair implements XdrElement {
  private Hash transactionHash;
  private InnerTransactionResult result;

  public static void encode(
      XdrDataOutputStream stream, InnerTransactionResultPair encodedInnerTransactionResultPair)
      throws IOException {
    Hash.encode(stream, encodedInnerTransactionResultPair.transactionHash);
    InnerTransactionResult.encode(stream, encodedInnerTransactionResultPair.result);
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public static InnerTransactionResultPair decode(XdrDataInputStream stream) throws IOException {
    InnerTransactionResultPair decodedInnerTransactionResultPair = new InnerTransactionResultPair();
    decodedInnerTransactionResultPair.transactionHash = Hash.decode(stream);
    decodedInnerTransactionResultPair.result = InnerTransactionResult.decode(stream);
    return decodedInnerTransactionResultPair;
  }

  @Override
  public String toXdrBase64() throws IOException {
    return Base64Factory.getInstance().encodeToString(toXdrByteArray());
  }

  @Override
  public byte[] toXdrByteArray() throws IOException {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    XdrDataOutputStream xdrDataOutputStream = new XdrDataOutputStream(byteArrayOutputStream);
    encode(xdrDataOutputStream);
    return byteArrayOutputStream.toByteArray();
  }

  public static InnerTransactionResultPair fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static InnerTransactionResultPair fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
