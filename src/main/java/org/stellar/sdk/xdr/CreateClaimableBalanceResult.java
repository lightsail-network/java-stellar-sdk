// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import static org.stellar.sdk.xdr.Constants.*;

import com.google.common.base.Objects;
import java.io.IOException;

// === xdr source ============================================================

//  union CreateClaimableBalanceResult switch (
//      CreateClaimableBalanceResultCode code)
//  {
//  case CREATE_CLAIMABLE_BALANCE_SUCCESS:
//      ClaimableBalanceID balanceID;
//  case CREATE_CLAIMABLE_BALANCE_MALFORMED:
//  case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:
//  case CREATE_CLAIMABLE_BALANCE_NO_TRUST:
//  case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:
//  case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:
//      void;
//  };

//  ===========================================================================
public class CreateClaimableBalanceResult implements XdrElement {
  public CreateClaimableBalanceResult() {}

  CreateClaimableBalanceResultCode code;

  public CreateClaimableBalanceResultCode getDiscriminant() {
    return this.code;
  }

  public void setDiscriminant(CreateClaimableBalanceResultCode value) {
    this.code = value;
  }

  private ClaimableBalanceID balanceID;

  public ClaimableBalanceID getBalanceID() {
    return this.balanceID;
  }

  public void setBalanceID(ClaimableBalanceID value) {
    this.balanceID = value;
  }

  public static final class Builder {
    private CreateClaimableBalanceResultCode discriminant;
    private ClaimableBalanceID balanceID;

    public Builder discriminant(CreateClaimableBalanceResultCode discriminant) {
      this.discriminant = discriminant;
      return this;
    }

    public Builder balanceID(ClaimableBalanceID balanceID) {
      this.balanceID = balanceID;
      return this;
    }

    public CreateClaimableBalanceResult build() {
      CreateClaimableBalanceResult val = new CreateClaimableBalanceResult();
      val.setDiscriminant(discriminant);
      val.setBalanceID(this.balanceID);
      return val;
    }
  }

  public static void encode(
      XdrDataOutputStream stream, CreateClaimableBalanceResult encodedCreateClaimableBalanceResult)
      throws IOException {
    // Xdrgen::AST::Identifier
    // CreateClaimableBalanceResultCode
    stream.writeInt(encodedCreateClaimableBalanceResult.getDiscriminant().getValue());
    switch (encodedCreateClaimableBalanceResult.getDiscriminant()) {
      case CREATE_CLAIMABLE_BALANCE_SUCCESS:
        ClaimableBalanceID.encode(stream, encodedCreateClaimableBalanceResult.balanceID);
        break;
      case CREATE_CLAIMABLE_BALANCE_MALFORMED:
      case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:
      case CREATE_CLAIMABLE_BALANCE_NO_TRUST:
      case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:
      case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:
        break;
    }
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public static CreateClaimableBalanceResult decode(XdrDataInputStream stream) throws IOException {
    CreateClaimableBalanceResult decodedCreateClaimableBalanceResult =
        new CreateClaimableBalanceResult();
    CreateClaimableBalanceResultCode discriminant = CreateClaimableBalanceResultCode.decode(stream);
    decodedCreateClaimableBalanceResult.setDiscriminant(discriminant);
    switch (decodedCreateClaimableBalanceResult.getDiscriminant()) {
      case CREATE_CLAIMABLE_BALANCE_SUCCESS:
        decodedCreateClaimableBalanceResult.balanceID = ClaimableBalanceID.decode(stream);
        break;
      case CREATE_CLAIMABLE_BALANCE_MALFORMED:
      case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:
      case CREATE_CLAIMABLE_BALANCE_NO_TRUST:
      case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:
      case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:
        break;
    }
    return decodedCreateClaimableBalanceResult;
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(this.balanceID, this.code);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof CreateClaimableBalanceResult)) {
      return false;
    }

    CreateClaimableBalanceResult other = (CreateClaimableBalanceResult) object;
    return Objects.equal(this.balanceID, other.balanceID) && Objects.equal(this.code, other.code);
  }
}
