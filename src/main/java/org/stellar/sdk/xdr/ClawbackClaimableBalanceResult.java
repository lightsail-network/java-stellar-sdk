// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * ClawbackClaimableBalanceResult's original definition in the XDR file is:
 *
 * <pre>
 * union ClawbackClaimableBalanceResult switch (
 *     ClawbackClaimableBalanceResultCode code)
 * {
 * case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:
 *     void;
 * case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:
 * case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:
 * case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:
 *     void;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class ClawbackClaimableBalanceResult implements XdrElement {
  private ClawbackClaimableBalanceResultCode discriminant;

  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(discriminant.getValue());
    switch (discriminant) {
      case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:
        break;
      case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:
      case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:
      case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:
        break;
    }
  }

  public static ClawbackClaimableBalanceResult decode(XdrDataInputStream stream)
      throws IOException {
    ClawbackClaimableBalanceResult decodedClawbackClaimableBalanceResult =
        new ClawbackClaimableBalanceResult();
    ClawbackClaimableBalanceResultCode discriminant =
        ClawbackClaimableBalanceResultCode.decode(stream);
    decodedClawbackClaimableBalanceResult.setDiscriminant(discriminant);
    switch (decodedClawbackClaimableBalanceResult.getDiscriminant()) {
      case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:
        break;
      case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:
      case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:
      case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:
        break;
    }
    return decodedClawbackClaimableBalanceResult;
  }

  public static ClawbackClaimableBalanceResult fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static ClawbackClaimableBalanceResult fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
