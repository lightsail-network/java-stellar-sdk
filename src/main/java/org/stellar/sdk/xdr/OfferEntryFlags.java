// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.stellar.sdk.Base64Factory;

/**
 * OfferEntryFlags's original definition in the XDR file is:
 *
 * <pre>
 * enum OfferEntryFlags
 * {
 *     // an offer with this flag will not act on and take a reverse offer of equal
 *     // price
 *     PASSIVE_FLAG = 1
 * };
 * </pre>
 */
public enum OfferEntryFlags implements XdrElement {
  PASSIVE_FLAG(1);

  private final int value;

  OfferEntryFlags(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }

  public static OfferEntryFlags decode(XdrDataInputStream stream) throws IOException {
    int value = stream.readInt();
    switch (value) {
      case 1:
        return PASSIVE_FLAG;
      default:
        throw new IllegalArgumentException("Unknown enum value: " + value);
    }
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(value);
  }

  public static OfferEntryFlags fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static OfferEntryFlags fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
