// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * MuxedEd25519Account's original definition in the XDR file is:
 *
 * <pre>
 * struct MuxedEd25519Account
 * {
 *     uint64 id;
 *     uint256 ed25519;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class MuxedEd25519Account implements XdrElement {
  private Uint64 id;
  private Uint256 ed25519;

  public void encode(XdrDataOutputStream stream) throws IOException {
    id.encode(stream);
    ed25519.encode(stream);
  }

  public static MuxedEd25519Account decode(XdrDataInputStream stream) throws IOException {
    MuxedEd25519Account decodedMuxedEd25519Account = new MuxedEd25519Account();
    decodedMuxedEd25519Account.id = Uint64.decode(stream);
    decodedMuxedEd25519Account.ed25519 = Uint256.decode(stream);
    return decodedMuxedEd25519Account;
  }

  public static MuxedEd25519Account fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static MuxedEd25519Account fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
