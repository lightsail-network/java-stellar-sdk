// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * TransactionResultPair's original definition in the XDR file is:
 *
 * <pre>
 * struct TransactionResultPair
 * {
 *     Hash transactionHash;
 *     TransactionResult result; // result for the transaction
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class TransactionResultPair implements XdrElement {
  private Hash transactionHash;
  private TransactionResult result;

  public void encode(XdrDataOutputStream stream) throws IOException {
    transactionHash.encode(stream);
    result.encode(stream);
  }

  public static TransactionResultPair decode(XdrDataInputStream stream) throws IOException {
    TransactionResultPair decodedTransactionResultPair = new TransactionResultPair();
    decodedTransactionResultPair.transactionHash = Hash.decode(stream);
    decodedTransactionResultPair.result = TransactionResult.decode(stream);
    return decodedTransactionResultPair;
  }

  public static TransactionResultPair fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static TransactionResultPair fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
