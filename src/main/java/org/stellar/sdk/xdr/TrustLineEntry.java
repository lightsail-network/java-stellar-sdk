// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

import com.google.common.base.Objects;

// === xdr source ============================================================

//  struct TrustLineEntry
//  {
//      AccountID accountID; // account this trustline belongs to
//      Asset asset;         // type of asset (with issuer)
//      int64 balance;       // how much of this asset the user has.
//                           // Asset defines the unit for this;
//  
//      int64 limit;  // balance cannot be above this
//      uint32 flags; // see TrustLineFlags
//  
//      // reserved for future use
//      union switch (int v)
//      {
//      case 0:
//          void;
//      case 1:
//          struct
//          {
//              Liabilities liabilities;
//  
//              union switch (int v)
//              {
//              case 0:
//                  void;
//              }
//              ext;
//          } v1;
//      }
//      ext;
//  };

//  ===========================================================================
public class TrustLineEntry  {
  public TrustLineEntry () {}
  private AccountID accountID;
  public AccountID getAccountID() {
    return this.accountID;
  }
  public void setAccountID(AccountID value) {
    this.accountID = value;
  }
  private Asset asset;
  public Asset getAsset() {
    return this.asset;
  }
  public void setAsset(Asset value) {
    this.asset = value;
  }
  private Int64 balance;
  public Int64 getBalance() {
    return this.balance;
  }
  public void setBalance(Int64 value) {
    this.balance = value;
  }
  private Int64 limit;
  public Int64 getLimit() {
    return this.limit;
  }
  public void setLimit(Int64 value) {
    this.limit = value;
  }
  private Uint32 flags;
  public Uint32 getFlags() {
    return this.flags;
  }
  public void setFlags(Uint32 value) {
    this.flags = value;
  }
  private TrustLineEntryExt ext;
  public TrustLineEntryExt getExt() {
    return this.ext;
  }
  public void setExt(TrustLineEntryExt value) {
    this.ext = value;
  }
  public static void encode(XdrDataOutputStream stream, TrustLineEntry encodedTrustLineEntry) throws IOException{
    AccountID.encode(stream, encodedTrustLineEntry.accountID);
    Asset.encode(stream, encodedTrustLineEntry.asset);
    Int64.encode(stream, encodedTrustLineEntry.balance);
    Int64.encode(stream, encodedTrustLineEntry.limit);
    Uint32.encode(stream, encodedTrustLineEntry.flags);
    TrustLineEntryExt.encode(stream, encodedTrustLineEntry.ext);
  }
  public static TrustLineEntry decode(XdrDataInputStream stream) throws IOException {
    TrustLineEntry decodedTrustLineEntry = new TrustLineEntry();
    decodedTrustLineEntry.accountID = AccountID.decode(stream);
    decodedTrustLineEntry.asset = Asset.decode(stream);
    decodedTrustLineEntry.balance = Int64.decode(stream);
    decodedTrustLineEntry.limit = Int64.decode(stream);
    decodedTrustLineEntry.flags = Uint32.decode(stream);
    decodedTrustLineEntry.ext = TrustLineEntryExt.decode(stream);
    return decodedTrustLineEntry;
  }
  @Override
  public int hashCode() {
    return Objects.hashCode(this.accountID, this.asset, this.balance, this.limit, this.flags, this.ext);
  }
  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof TrustLineEntry)) {
      return false;
    }

    TrustLineEntry other = (TrustLineEntry) object;
    return Objects.equal(this.accountID, other.accountID) && Objects.equal(this.asset, other.asset) && Objects.equal(this.balance, other.balance) && Objects.equal(this.limit, other.limit) && Objects.equal(this.flags, other.flags) && Objects.equal(this.ext, other.ext);
  }

  public static class TrustLineEntryExt {
    public TrustLineEntryExt () {}
    Integer v;
    public Integer getDiscriminant() {
      return this.v;
    }
    public void setDiscriminant(Integer value) {
      this.v = value;
    }
    private TrustLineEntryV1 v1;
    public TrustLineEntryV1 getV1() {
      return this.v1;
    }
    public void setV1(TrustLineEntryV1 value) {
      this.v1 = value;
    }
    public static void encode(XdrDataOutputStream stream, TrustLineEntryExt encodedTrustLineEntryExt) throws IOException {
    //Xdrgen::AST::Typespecs::Int
    //Integer
    stream.writeInt(encodedTrustLineEntryExt.getDiscriminant().intValue());
    switch (encodedTrustLineEntryExt.getDiscriminant()) {
    case 0:
    break;
    case 1:
    TrustLineEntryV1.encode(stream, encodedTrustLineEntryExt.v1);
    break;
    }
    }
    public static TrustLineEntryExt decode(XdrDataInputStream stream) throws IOException {
    TrustLineEntryExt decodedTrustLineEntryExt = new TrustLineEntryExt();
    Integer discriminant = stream.readInt();
    decodedTrustLineEntryExt.setDiscriminant(discriminant);
    switch (decodedTrustLineEntryExt.getDiscriminant()) {
    case 0:
    break;
    case 1:
    decodedTrustLineEntryExt.v1 = TrustLineEntryV1.decode(stream);
    break;
    }
      return decodedTrustLineEntryExt;
    }
    @Override
    public int hashCode() {
      return Objects.hashCode(this.v1, this.v);
    }
    @Override
    public boolean equals(Object object) {
      if (object == null || !(object instanceof TrustLineEntryExt)) {
        return false;
      }

      TrustLineEntryExt other = (TrustLineEntryExt) object;
      return Objects.equal(this.v1, other.v1) && Objects.equal(this.v, other.v);
    }

    public static class TrustLineEntryV1 {
      public TrustLineEntryV1 () {}
      private Liabilities liabilities;
      public Liabilities getLiabilities() {
        return this.liabilities;
      }
      public void setLiabilities(Liabilities value) {
        this.liabilities = value;
      }
      private TrustLineEntryV1Ext ext;
      public TrustLineEntryV1Ext getExt() {
        return this.ext;
      }
      public void setExt(TrustLineEntryV1Ext value) {
        this.ext = value;
      }
      public static void encode(XdrDataOutputStream stream, TrustLineEntryV1 encodedTrustLineEntryV1) throws IOException{
        Liabilities.encode(stream, encodedTrustLineEntryV1.liabilities);
        TrustLineEntryV1Ext.encode(stream, encodedTrustLineEntryV1.ext);
      }
      public static TrustLineEntryV1 decode(XdrDataInputStream stream) throws IOException {
        TrustLineEntryV1 decodedTrustLineEntryV1 = new TrustLineEntryV1();
        decodedTrustLineEntryV1.liabilities = Liabilities.decode(stream);
        decodedTrustLineEntryV1.ext = TrustLineEntryV1Ext.decode(stream);
        return decodedTrustLineEntryV1;
      }
      @Override
      public int hashCode() {
        return Objects.hashCode(this.liabilities, this.ext);
      }
      @Override
      public boolean equals(Object object) {
        if (object == null || !(object instanceof TrustLineEntryV1)) {
          return false;
        }

        TrustLineEntryV1 other = (TrustLineEntryV1) object;
        return Objects.equal(this.liabilities, other.liabilities) && Objects.equal(this.ext, other.ext);
      }

      public static class TrustLineEntryV1Ext {
        public TrustLineEntryV1Ext () {}
        Integer v;
        public Integer getDiscriminant() {
          return this.v;
        }
        public void setDiscriminant(Integer value) {
          this.v = value;
        }
        public static void encode(XdrDataOutputStream stream, TrustLineEntryV1Ext encodedTrustLineEntryV1Ext) throws IOException {
        //Xdrgen::AST::Typespecs::Int
        //Integer
        stream.writeInt(encodedTrustLineEntryV1Ext.getDiscriminant().intValue());
        switch (encodedTrustLineEntryV1Ext.getDiscriminant()) {
        case 0:
        break;
        }
        }
        public static TrustLineEntryV1Ext decode(XdrDataInputStream stream) throws IOException {
        TrustLineEntryV1Ext decodedTrustLineEntryV1Ext = new TrustLineEntryV1Ext();
        Integer discriminant = stream.readInt();
        decodedTrustLineEntryV1Ext.setDiscriminant(discriminant);
        switch (decodedTrustLineEntryV1Ext.getDiscriminant()) {
        case 0:
        break;
        }
          return decodedTrustLineEntryV1Ext;
        }
        @Override
        public int hashCode() {
          return Objects.hashCode(this.v);
        }
        @Override
        public boolean equals(Object object) {
          if (object == null || !(object instanceof TrustLineEntryV1Ext)) {
            return false;
          }

          TrustLineEntryV1Ext other = (TrustLineEntryV1Ext) object;
          return Objects.equal(this.v, other.v);
        }

      }
    }
  }
}
