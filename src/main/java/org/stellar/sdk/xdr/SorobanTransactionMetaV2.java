// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * SorobanTransactionMetaV2's original definition in the XDR file is:
 *
 * <pre>
 * struct SorobanTransactionMetaV2
 * {
 *     SorobanTransactionMetaExt ext;
 *
 *     SCVal&#42; returnValue;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class SorobanTransactionMetaV2 implements XdrElement {
  private SorobanTransactionMetaExt ext;
  private SCVal returnValue;

  public void encode(XdrDataOutputStream stream) throws IOException {
    ext.encode(stream);
    if (returnValue != null) {
      stream.writeInt(1);
      returnValue.encode(stream);
    } else {
      stream.writeInt(0);
    }
  }

  public static SorobanTransactionMetaV2 decode(XdrDataInputStream stream) throws IOException {
    SorobanTransactionMetaV2 decodedSorobanTransactionMetaV2 = new SorobanTransactionMetaV2();
    decodedSorobanTransactionMetaV2.ext = SorobanTransactionMetaExt.decode(stream);
    int returnValuePresent = stream.readInt();
    if (returnValuePresent != 0) {
      decodedSorobanTransactionMetaV2.returnValue = SCVal.decode(stream);
    }
    return decodedSorobanTransactionMetaV2;
  }

  public static SorobanTransactionMetaV2 fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static SorobanTransactionMetaV2 fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
