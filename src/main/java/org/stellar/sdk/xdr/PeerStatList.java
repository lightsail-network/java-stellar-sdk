// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * PeerStatList's original definition in the XDR file is:
 *
 * <pre>
 * typedef PeerStats PeerStatList&lt;25&gt;;
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class PeerStatList implements XdrElement {
  private PeerStats[] PeerStatList;

  public void encode(XdrDataOutputStream stream) throws IOException {
    int PeerStatListSize = getPeerStatList().length;
    stream.writeInt(PeerStatListSize);
    for (int i = 0; i < PeerStatListSize; i++) {
      PeerStatList[i].encode(stream);
    }
  }

  public static PeerStatList decode(XdrDataInputStream stream) throws IOException {
    PeerStatList decodedPeerStatList = new PeerStatList();
    int PeerStatListSize = stream.readInt();
    decodedPeerStatList.PeerStatList = new PeerStats[PeerStatListSize];
    for (int i = 0; i < PeerStatListSize; i++) {
      decodedPeerStatList.PeerStatList[i] = PeerStats.decode(stream);
    }
    return decodedPeerStatList;
  }

  public static PeerStatList fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static PeerStatList fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
