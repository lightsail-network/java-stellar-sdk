// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * ConfigSettingSCPTiming's original definition in the XDR file is:
 *
 * <pre>
 * struct ConfigSettingSCPTiming {
 *     uint32 ledgerTargetCloseTimeMilliseconds;
 *     uint32 nominationTimeoutInitialMilliseconds;
 *     uint32 nominationTimeoutIncrementMilliseconds;
 *     uint32 ballotTimeoutInitialMilliseconds;
 *     uint32 ballotTimeoutIncrementMilliseconds;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class ConfigSettingSCPTiming implements XdrElement {
  private Uint32 ledgerTargetCloseTimeMilliseconds;
  private Uint32 nominationTimeoutInitialMilliseconds;
  private Uint32 nominationTimeoutIncrementMilliseconds;
  private Uint32 ballotTimeoutInitialMilliseconds;
  private Uint32 ballotTimeoutIncrementMilliseconds;

  public void encode(XdrDataOutputStream stream) throws IOException {
    ledgerTargetCloseTimeMilliseconds.encode(stream);
    nominationTimeoutInitialMilliseconds.encode(stream);
    nominationTimeoutIncrementMilliseconds.encode(stream);
    ballotTimeoutInitialMilliseconds.encode(stream);
    ballotTimeoutIncrementMilliseconds.encode(stream);
  }

  public static ConfigSettingSCPTiming decode(XdrDataInputStream stream) throws IOException {
    ConfigSettingSCPTiming decodedConfigSettingSCPTiming = new ConfigSettingSCPTiming();
    decodedConfigSettingSCPTiming.ledgerTargetCloseTimeMilliseconds = Uint32.decode(stream);
    decodedConfigSettingSCPTiming.nominationTimeoutInitialMilliseconds = Uint32.decode(stream);
    decodedConfigSettingSCPTiming.nominationTimeoutIncrementMilliseconds = Uint32.decode(stream);
    decodedConfigSettingSCPTiming.ballotTimeoutInitialMilliseconds = Uint32.decode(stream);
    decodedConfigSettingSCPTiming.ballotTimeoutIncrementMilliseconds = Uint32.decode(stream);
    return decodedConfigSettingSCPTiming;
  }

  public static ConfigSettingSCPTiming fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static ConfigSettingSCPTiming fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
