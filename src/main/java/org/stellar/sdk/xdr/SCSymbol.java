// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * SCSymbol's original definition in the XDR file is:
 *
 * <pre>
 * typedef string SCSymbol&lt;SCSYMBOL_LIMIT&gt;;
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class SCSymbol implements XdrElement {
  private XdrString SCSymbol;

  public void encode(XdrDataOutputStream stream) throws IOException {
    SCSymbol.encode(stream);
  }

  public static SCSymbol decode(XdrDataInputStream stream) throws IOException {
    SCSymbol decodedSCSymbol = new SCSymbol();
    decodedSCSymbol.SCSymbol = XdrString.decode(stream, Constants.SCSYMBOL_LIMIT);
    return decodedSCSymbol;
  }

  public static SCSymbol fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static SCSymbol fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
