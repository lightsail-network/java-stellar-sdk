// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;


import java.io.IOException;

import com.google.common.base.Objects;

// === xdr source ============================================================

//  union EndSponsoringFutureReservesResult switch (EndSponsoringFutureReservesResultCode code)
//  {
//  case END_SPONSORING_FUTURE_RESERVES_SUCCESS:
//      void;
//  default:
//      void;
//  };

//  ===========================================================================
public class EndSponsoringFutureReservesResult implements XdrElement {
  public EndSponsoringFutureReservesResult () {}
  EndSponsoringFutureReservesResultCode code;
  public EndSponsoringFutureReservesResultCode getDiscriminant() {
    return this.code;
  }
  public void setDiscriminant(EndSponsoringFutureReservesResultCode value) {
    this.code = value;
  }
  public static void encode(XdrDataOutputStream stream, EndSponsoringFutureReservesResult encodedEndSponsoringFutureReservesResult) throws IOException {
  //Xdrgen::AST::Identifier
  //EndSponsoringFutureReservesResultCode
  stream.writeInt(encodedEndSponsoringFutureReservesResult.getDiscriminant().getValue());
  switch (encodedEndSponsoringFutureReservesResult.getDiscriminant()) {
  case END_SPONSORING_FUTURE_RESERVES_SUCCESS:
  break;
  default:
  break;
  }
  }
  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }
  public static EndSponsoringFutureReservesResult decode(XdrDataInputStream stream) throws IOException {
  EndSponsoringFutureReservesResult decodedEndSponsoringFutureReservesResult = new EndSponsoringFutureReservesResult();
  EndSponsoringFutureReservesResultCode discriminant = EndSponsoringFutureReservesResultCode.decode(stream);
  decodedEndSponsoringFutureReservesResult.setDiscriminant(discriminant);
  switch (decodedEndSponsoringFutureReservesResult.getDiscriminant()) {
  case END_SPONSORING_FUTURE_RESERVES_SUCCESS:
  break;
  default:
  break;
  }
    return decodedEndSponsoringFutureReservesResult;
  }
  @Override
  public int hashCode() {
    return Objects.hashCode(this.code);
  }
  @Override
  public boolean equals(Object object) {
    if (object == null || !(object instanceof EndSponsoringFutureReservesResult)) {
      return false;
    }

    EndSponsoringFutureReservesResult other = (EndSponsoringFutureReservesResult) object;
    return Objects.equal(this.code, other.code);
  }
}
