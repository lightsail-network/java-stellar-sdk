// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.stellar.sdk.Base64Factory;

/**
 * SCSpecEventParamV0's original definition in the XDR file is:
 *
 * <pre>
 * struct SCSpecEventParamV0
 * {
 *     string doc&lt;SC_SPEC_DOC_LIMIT&gt;;
 *     string name&lt;30&gt;;
 *     SCSpecTypeDef type;
 *     SCSpecEventParamLocationV0 location;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class SCSpecEventParamV0 implements XdrElement {
  private XdrString doc;
  private XdrString name;
  private SCSpecTypeDef type;
  private SCSpecEventParamLocationV0 location;

  public void encode(XdrDataOutputStream stream) throws IOException {
    doc.encode(stream);
    name.encode(stream);
    type.encode(stream);
    location.encode(stream);
  }

  public static SCSpecEventParamV0 decode(XdrDataInputStream stream) throws IOException {
    SCSpecEventParamV0 decodedSCSpecEventParamV0 = new SCSpecEventParamV0();
    decodedSCSpecEventParamV0.doc = XdrString.decode(stream, Constants.SC_SPEC_DOC_LIMIT);
    decodedSCSpecEventParamV0.name = XdrString.decode(stream, 30);
    decodedSCSpecEventParamV0.type = SCSpecTypeDef.decode(stream);
    decodedSCSpecEventParamV0.location = SCSpecEventParamLocationV0.decode(stream);
    return decodedSCSpecEventParamV0;
  }

  public static SCSpecEventParamV0 fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static SCSpecEventParamV0 fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
