// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package org.stellar.sdk.xdr;

import static org.stellar.sdk.xdr.Constants.*;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Objects;
import org.stellar.sdk.Base64Factory;

// === xdr source ============================================================

//  union ManageSellOfferResult switch (ManageSellOfferResultCode code)
//  {
//  case MANAGE_SELL_OFFER_SUCCESS:
//      ManageOfferSuccessResult success;
//  case MANAGE_SELL_OFFER_MALFORMED:
//  case MANAGE_SELL_OFFER_SELL_NO_TRUST:
//  case MANAGE_SELL_OFFER_BUY_NO_TRUST:
//  case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:
//  case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:
//  case MANAGE_SELL_OFFER_LINE_FULL:
//  case MANAGE_SELL_OFFER_UNDERFUNDED:
//  case MANAGE_SELL_OFFER_CROSS_SELF:
//  case MANAGE_SELL_OFFER_SELL_NO_ISSUER:
//  case MANAGE_SELL_OFFER_BUY_NO_ISSUER:
//  case MANAGE_SELL_OFFER_NOT_FOUND:
//  case MANAGE_SELL_OFFER_LOW_RESERVE:
//      void;
//  };

//  ===========================================================================
public class ManageSellOfferResult implements XdrElement {
  public ManageSellOfferResult() {}

  ManageSellOfferResultCode code;

  public ManageSellOfferResultCode getDiscriminant() {
    return this.code;
  }

  public void setDiscriminant(ManageSellOfferResultCode value) {
    this.code = value;
  }

  private ManageOfferSuccessResult success;

  public ManageOfferSuccessResult getSuccess() {
    return this.success;
  }

  public void setSuccess(ManageOfferSuccessResult value) {
    this.success = value;
  }

  public static final class Builder {
    private ManageSellOfferResultCode discriminant;
    private ManageOfferSuccessResult success;

    public Builder discriminant(ManageSellOfferResultCode discriminant) {
      this.discriminant = discriminant;
      return this;
    }

    public Builder success(ManageOfferSuccessResult success) {
      this.success = success;
      return this;
    }

    public ManageSellOfferResult build() {
      ManageSellOfferResult val = new ManageSellOfferResult();
      val.setDiscriminant(discriminant);
      val.setSuccess(this.success);
      return val;
    }
  }

  public static void encode(
      XdrDataOutputStream stream, ManageSellOfferResult encodedManageSellOfferResult)
      throws IOException {
    // Xdrgen::AST::Identifier
    // ManageSellOfferResultCode
    stream.writeInt(encodedManageSellOfferResult.getDiscriminant().getValue());
    switch (encodedManageSellOfferResult.getDiscriminant()) {
      case MANAGE_SELL_OFFER_SUCCESS:
        ManageOfferSuccessResult.encode(stream, encodedManageSellOfferResult.success);
        break;
      case MANAGE_SELL_OFFER_MALFORMED:
      case MANAGE_SELL_OFFER_SELL_NO_TRUST:
      case MANAGE_SELL_OFFER_BUY_NO_TRUST:
      case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:
      case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:
      case MANAGE_SELL_OFFER_LINE_FULL:
      case MANAGE_SELL_OFFER_UNDERFUNDED:
      case MANAGE_SELL_OFFER_CROSS_SELF:
      case MANAGE_SELL_OFFER_SELL_NO_ISSUER:
      case MANAGE_SELL_OFFER_BUY_NO_ISSUER:
      case MANAGE_SELL_OFFER_NOT_FOUND:
      case MANAGE_SELL_OFFER_LOW_RESERVE:
        break;
    }
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    encode(stream, this);
  }

  public static ManageSellOfferResult decode(XdrDataInputStream stream) throws IOException {
    ManageSellOfferResult decodedManageSellOfferResult = new ManageSellOfferResult();
    ManageSellOfferResultCode discriminant = ManageSellOfferResultCode.decode(stream);
    decodedManageSellOfferResult.setDiscriminant(discriminant);
    switch (decodedManageSellOfferResult.getDiscriminant()) {
      case MANAGE_SELL_OFFER_SUCCESS:
        decodedManageSellOfferResult.success = ManageOfferSuccessResult.decode(stream);
        break;
      case MANAGE_SELL_OFFER_MALFORMED:
      case MANAGE_SELL_OFFER_SELL_NO_TRUST:
      case MANAGE_SELL_OFFER_BUY_NO_TRUST:
      case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:
      case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:
      case MANAGE_SELL_OFFER_LINE_FULL:
      case MANAGE_SELL_OFFER_UNDERFUNDED:
      case MANAGE_SELL_OFFER_CROSS_SELF:
      case MANAGE_SELL_OFFER_SELL_NO_ISSUER:
      case MANAGE_SELL_OFFER_BUY_NO_ISSUER:
      case MANAGE_SELL_OFFER_NOT_FOUND:
      case MANAGE_SELL_OFFER_LOW_RESERVE:
        break;
    }
    return decodedManageSellOfferResult;
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.success, this.code);
  }

  @Override
  public boolean equals(Object object) {
    if (!(object instanceof ManageSellOfferResult)) {
      return false;
    }

    ManageSellOfferResult other = (ManageSellOfferResult) object;
    return Objects.equals(this.success, other.success) && Objects.equals(this.code, other.code);
  }

  @Override
  public String toXdrBase64() throws IOException {
    return Base64Factory.getInstance().encodeToString(toXdrByteArray());
  }

  @Override
  public byte[] toXdrByteArray() throws IOException {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    XdrDataOutputStream xdrDataOutputStream = new XdrDataOutputStream(byteArrayOutputStream);
    encode(xdrDataOutputStream);
    return byteArrayOutputStream.toByteArray();
  }

  public static ManageSellOfferResult fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static ManageSellOfferResult fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
