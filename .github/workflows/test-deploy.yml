name: "Test and Deploy"

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - created
  schedule:
    # Every Monday at 00:30 UTC
    - cron: '30 0 * * 1'

env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'microsoft'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Test
        run: ./gradlew check
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Build
        run: ./gradlew build
      - name: Persist JAR Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libs
          path: build/libs/*.jar

  javadoc:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Generate Documentation
        run: ./gradlew javadoc
      - name: Persist Documentation
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: javadoc

  android-test:
    needs: build
    runs-on: ubuntu-latest
    name: android-test (api ${{ matrix.emulator.api-level }})
    strategy:
      fail-fast: false
      matrix:
        emulator: [
          { api-level: 23, target: google_apis },
          { api-level: 34, target: playstore }
        ]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: libs
          path: android_test/app/libs/
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./android_test
          api-level: ${{ matrix.emulator.api-level }}
          target: ${{ matrix.emulator.target }}
          script: ./gradlew connectedCheck
          arch: x86_64
          profile: 'pixel_2'


  deploy-gh-releases:
    needs: [ build, javadoc, android-test ]
    permissions:
      contents: write
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: libs
          path: libs
      - name: Download Java Documentation
        uses: actions/download-artifact@v4
        with:
          name: javadoc
          path: javadoc
      - name: Archive Documentation
        run: tar -czf stellar-sdk-javadoc.tar.gz javadoc
      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            libs/*.jar
            stellar-sdk-javadoc.tar.gz
      - name: Upload Documentation to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: javadoc

  deploy-maven-central:
    needs: [ build, javadoc, android-test ]
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    env:
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Publish to Maven Central
        run: ./gradlew publishAllPublicationsToCentralPortal